# Задача 2: Найдите сумму цифр 
# трехзначного числа.

# Пример:
# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0) |

# a = int(input("введите трехзначное число"))
# r1 = a%10
# r2 = (a%100)//10
# r3 = a//100
# print(r1+r2+r3, f"({r3} + {r2} + {r1})")


# Задача 4: 
# Петя, Катя и Сережа делают из бумаги 
# журавликов. Вместе они сделали S журавликов.
# Сколько журавликов сделал каждый ребенок,
# если известно, что Петя и Сережа сделали 
# одинаковое количество журавликов, 
# а Катя сделала в два раза больше журавликов, 
# чем Петя и Сережа вместе?

# Пример:
# 6 -> 1  4  1
# 24 -> 4  16  4
# 60 -> 10  40  10

# s = int(input("введите сколько журавликов сделали дети:"))
# n = int(s/6)
# m = int(2*s/3)
# if s%6 > 0:
#     s = int(input("введите сколько журавликов сделали дети:"))

# else:
#     print(f"{n}, {m}, {n}")


# Задача 6: 
# Счастливый билет - билет с шестизначным номером, 
# где сумма первых трех цифр равна сумме 
# последних. Написать программу, 
# которая это.

# 385916 -> yes
# 123456 -> no

# s = int(input("введите шестизначный номер билета:"))
# sum1 = s%10+(s%100)//10+(s%1000)//100
# sum2 = (s%10000)//1000 + (s%100000)//10000 + s//100000
# if sum1==sum2:
#     print("yes")
# else:
#     print("no")


# Задача 8.
# Требуется определить, можно ли от шоколадки размером
# n × m долек отломить k долек, если разрешается сделать
# один разлом по прямой между дольками (те разломить 
# шоколадку на два прямоугольника).

# 3 2 4 -> yes
# 3 2 1 -> no

# input("кол-во долек:")
# n,m,k = map ( int , input().split())
# if k%m==0:
#     print("yes")
# else: print("no")


# Задача 10
# На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное 
# число монеток, которые нужно перевернуть, чтобы все 
# монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, кот нужно 
# перевернуть.
# 5 -> 1 0 1 1 0
# 2

# n = int(input("количество монеток: "))
# sum1 = 0
# sum2 = 0
# import random
# items = [random.randint(0, 1) for i in range(n)]
# print(items)
# for i in range(n):
#     if items[i] ==1: sum1=sum1+1
#     else: sum2 = sum2+1
# if sum1<sum2: print(sum1)
# else:print (sum2)


# Задача 12
# Петя помогает Кате по математике. Он 
# задумывает два натуральных числа X и Y (X,Y≤1000), 
# а Катя должна их отгадать. Для этого Петя делает две 
# подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать числа.
# 4 4 -> 2 2
# 5 6 -> 2 3

# p = int(input("произведение двух чисел: "))
# if p > 1000000:
#     p = int(input("произведение двух чисел <= 1000000: "))
# s = int(input("сумма этих чисел: "))
# if s > 2000:
#     s = int(input("сумма этих чисел <= 2000: "))
# import math
# d = math.sqrt(s**2 - 4*p)
# r1 = (s + d)/2
# r2 = (s - d)/2
# print(int(r1),int(r2))

# Задача 14
# Требуется вывести все целые степени двойки
# (т.е. числа вида 2k), не превосходящие числа N.
# 10 -> 1 2 4 8

# n = int(input("ввести N "))
# for i in range(n):
#     if (2**i) < n:
#         print(2**i) 

# Задача 16: 
# Требуется вычислить, сколько раз встречается 
# некоторое число X в массиве A[1..N]. Пользователь в 
# первой строке вводит натуральное число N – количество 
# элементов в массиве. В последующих строках записаны 
# N целых чисел Ai. Последняя строка содержит число X
# 5
# 1 2 3 4 5
# 3
# -> 1

# n=int(input('введите количество элементов массива'))
# a = [int(input()) for i in range(n)]
# x = int(input('введите искомое число:'))
# sum = 0
# for j in a:
#     if j == x:
#         sum+=1
# print(sum)




# Задача 18: Требуется найти в массиве A[1..N] самый 
# близкий повеличине элемент к заданному числу X. 
# Пользователь в первой строке вводит натуральное число 
# N – количество элементов в массиве. В последующих 
# строках записаны N целых чисел Ai. Последняя строка
# содержит число X

# 5
# 1 2 3 4 5
# 6
# -> 5

# n=int(input('введите количество элементов массива:'))
# a = [int(input()) for i in range(n)]
# x = int(input('введите X число:'))
# min = abs(x-a[0])
# result = a[0]

# for i in a:
#     if abs(x-i)<=min:
#         min = abs(x-i)
#         result=i
# print(result)


# Задача 20: В настольной игре Скрабл (Scrabble) каждая
# буква имеет определенную ценность. В случае с 
# английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.

# А русские буквы оцениваются так:
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость 
# введенного пользователем слова.
# Будем считать, что на вход подается только одно слово,
# которое содержит либо только английские, 
# либо только русские буквы.

# Ввод:
# ноутбук
# Вывод:
# 12

# dictionary = {'А, В, Е, И, Н, О, Р, С, Т' : 1, "Д, К, Л, М, П, У" : 2, "Б, Г, Ё, Ь, Я" : 3, "Й, Ы" : 4, "Ж, З, Х, Ц, Ч" : 5, "Ш, Э, Ю" : 8, "Ф, Щ, Ъ" : 10}


# word = str(input('введите слово:'))
# a = [i for i in word]
# result = 0
# for j in a:
#     for k in dictionary:
#         if j in k:
#              result+=dictionary[k]
#              break   
# print(result)

# list_word = {1:'А, В, Е, И, Н, О, Р, С, Т', 2:'Д, К, Л, М, П, У', 3:  }
# sum = 0
# for i in word:
#     for k,v in list_word.items():
#         if i in v:
#             summ+=k
# print(f'сумма баллов в слове = {sum}')








# Задача 22.
# Даны два неупорядоченных набора целых чисел 
# (может быть, с повторениями). Выдать без повторений 
# в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов 
# первого множества. m - кол-во элементов второго
# множества. Затем пользователь вводит сами элементы 
# множеств

# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

n = int(input('n:'))
m = int(input('m:'))
list_n = [int(input(f'{i+1} элемент массива 1:')) for i in range (n)]
list_m = [int(input(f'{i+1} элемент массива 2:')) for i in range (m)]
list_n=set(list_n)
list_m=set(list_m)
print(sorted(list_m.intersection(list_n)))